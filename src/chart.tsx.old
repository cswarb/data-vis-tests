// import React, { useEffect, useRef, useState } from 'react';
// import * as d3 from 'd3';
// import { animated, useSpring } from 'react-spring';


// const AnimatedCircle = ({ index, isShowing }: any) => {
//   const wasShowing = useRef(false);
  
//   useEffect(() => {
//     wasShowing.current = isShowing
//   }, [isShowing]);

//   const style = useSpring({
//     config: {
//       duration: 1200,
//     },
//     r: isShowing ? 6 : 0,
//     opacity: isShowing ? 1 : 0,
//   })
//   return (
//     <animated.circle {...style}
//       cx={index[0] * 15 + 10}
//       cy="10"
//       fill={
//         !isShowing ? "tomato" :
//           !wasShowing.current ? "cornflowerblue" :
//             "lightgrey"
//       }
//     />
//   )
// }


export default ({ chartData }: any) => {
//   const ref = useRef<any>();

//   function generateCircles(): Array<any> {
//     return Array(6).fill(0).map(() => ([
//       Math.random() * 80 + 10,
//       Math.random() * 35 + 10,
//     ]))
//   }

//   const [visibleCircles, setVisibleCircles] = useState(
//     generateCircles()
//   );

//   setInterval(() => {
//     setVisibleCircles(generateCircles())
//   }, 5000)

//   return (
//     <svg>
//       { 
//         visibleCircles.map(c => {
//           return <AnimatedCircle {...c} key={c} index={c} isShowing={visibleCircles.includes(c)}></AnimatedCircle>
//         }) 
//       }
//     </svg>
//   )
  

//   // setTimeout(() => {
//   //   setVisibleCircles(visibleCircles.slice(0, visibleCircles.length - 1))
//   // }, 4000);

// //   useEffect(() => {
// //     const svgElement = d3.select<any, any>(ref.current);

// //     svgElement.selectAll("circle").data<any[]>(visibleCircles, (d: any) => {
// //       return d;
// //     })
// //     .join(
// //         enter => (
// //           enter.append("circle")
// //               .attr("cx", (d, i) => {
// //                 return i * 15
// //               })
// //               .attr("cy", 10)
// //               .attr("r", 0)
// //               .attr("fill", "cornflowerblue")
// //             .call((enter) => (
// //               enter.transition()
// //                 .duration(1200)
// //                 .attr("cy", 10)
// //                 .attr("r", 6)
// //                 .style("opacity", 1)
// //             ))
// //         ),
// //         update => (
// //           update.attr("fill", "lightgrey")
// //         ),
// //         exit => (
// //           exit.attr("fill", "tomato")
// //             .transition()
// //             .duration(1200)
// //             .attr("r", 0)
// //             .style("opacity", 0)
// //             .remove()
// //         ),
// //       )
// //   }, [visibleCircles])

// //   return (
// //     <svg
// //       viewBox="0 0 100 20"
// //       ref={ref}
// //     />
// //   )
// // }

// // export default ({ chartData }) => {
// //   console.log('Chart cmp with data: ', chartData);
// //   const ref = useRef();
// //   const g = d3.select(ref.current);

// //   console.log('eeeeee', g);

// //   function generateCircles() {
// //     return Array(6).fill(0).map(() => ([
// //       Math.random() * 80 + 10,
// //       Math.random() * 35 + 10,
// //     ]))
// //   }

// //   // const [dataset, setDataset] = useState(
// //   //   generateCircles()
// //   // )

// //   // const [visibleCircles, setVisibleCircles] = useState(
// //   //   generateCircles()
// //   // )

// //   // setInterval(() => {
// //   //   setVisibleCircles(generateCircles())
// //   // }, 5000)


// //   useEffect(() => {
// //     const svgElement = d3.select(ref.current);

// //     svgElement
// //       .selectAll('circle')
// //       .data(visibleCircles, d => d)
// //       .join((enter) => {
// //         enter
// //         .append('circle')
// //         .attr('cx', (d, i) => 50 + (i * 80))
// //         .attr('cy', 75)
// //         .attr('r', 0)
// //         .attr('fill', 'white')
// //         .attr('opacity', 0)
// //         .call((enter) => {
// //           enter
// //           .transition()
// //           .duration(1500)
// //           .attr('r', 25)
// //           .attr('fill', 'cornflowerblue')
// //           .attr('opacity', 1)
// //         })
// //       }, (update) => {
// //         update.transition().duration(500)
// //         .attr('fill', 'grey')
// //       }, (exit) => {
// //         exit.transition().duration(1000)
// //         .attr('fill', 'red')
// //         .attr('r', '0')
// //         .remove()
// //       })







    
// //   // svgElement
// //   //   .selectAll('text')
// //   //   .data(chartData, d => d)
// //   //   .join((enter) => {
// //   //     enter
// //   //       .append('text')
// //   //       .attr('x', 0)
// //   //       .attr('y', 50)
// //   //       .text(d => d)
// //   //       .attr('opacity', 0)
// //   //       .attr('fill', (d) => {
// //   //         return d % 2 === 0 ? 'green' : 'red'
// //   //       })
// //   //       .call((enter) => {
// //   //         enter
// //   //           .transition()
// //   //           .delay(d => d * 100)
// //   //           .duration(1000)
// //   //           .attr('opacity', 1)
// //   //           .attr('x', d => d * 15)
// //   //       })
// //   //   }, (update) => {

// //   //   }, (exit) => {
// //   //     exit.remove();
// //   //   })



// //     // svgElement
// //     //   .selectAll('rect')
// //     //   .data(chartData, d => d)
// //     //   .join((enter) => {
// //     //     return enter.append('rect')
// //     //       .attr('width', (d) => {
// //     //         console.log('DATA: ', d)
// //     //         return 0
// //     //       })
// //     //       .attr('height', (d) => 0)
// //     //       .attr('x', (d) => d[0] * 11)
// //     //       .attr('y', (d) => 10)
// //     //       .attr('fill', 'white')
// //     //       .call((enter) => {
// //     //         return enter
// //     //         .transition()
// //     //         .duration(3000)
// //     //         .attr('width', (d) => 100)
// //     //         .attr('height', (d) => 100)
// //     //       })
// //     //   }, (update) => {
// //     //     return update
// //     //       .attr("fill", "lightgrey")
// //     //   }, (exit) => {
// //     //     console.log('exit: ', exit)
// //     //     return exit.attr('fill', 'red')
// //     //     .call(
// //     //       (exit) => {
// //     //         exit.call((exit) => {
// //     //           exit.transition().duration(3000).attr('width', 0).attr('height', 0).remove()
// //     //         })
// //     //       }
// //     //     )
// //     //   });













// //   }, [chartData])

// //   return <div>
// //     <svg ref={ref}></svg>
    
// //   </div>
// // }

// // <svg>
// //     {
// //       chartData.map((d) => {
// //         return <circle fill="white" r="100" cx={d[0]} cy={d[0]}></circle>
// //       })
// //     }
// //     </svg>


}